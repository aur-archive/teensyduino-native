--- a/hardware/arduino/sam/cores/arduino/itoa.c	2015-03-10 14:19:57.000000000 +0100
+++ b/hardware/arduino/sam/cores/arduino/itoa.c	1970-01-01 01:00:00.000000000 +0100
@@ -1,170 +0,0 @@
-/*
-  Copyright (c) 2011 Arduino.  All right reserved.
-
-  This library is free software; you can redistribute it and/or
-  modify it under the terms of the GNU Lesser General Public
-  License as published by the Free Software Foundation; either
-  version 2.1 of the License, or (at your option) any later version.
-
-  This library is distributed in the hope that it will be useful,
-  but WITHOUT ANY WARRANTY; without even the implied warranty of
-  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. 
-  See the GNU Lesser General Public License for more details.
-
-  You should have received a copy of the GNU Lesser General Public
-  License along with this library; if not, write to the Free Software
-  Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-*/
-
-#include "itoa.h"
-#include <string.h>
-
-#ifdef __cplusplus
-extern "C"{
-#endif // __cplusplus
-
-#if 0
-/* reverse:  reverse string s in place */
-static void reverse( char s[] )
-{
-  int i, j ;
-  char c ;
-
-  for ( i = 0, j = strlen(s)-1 ; i < j ; i++, j-- )
-  {
-    c = s[i] ;
-    s[i] = s[j] ;
-    s[j] = c ;
-  }
-}
-
-/* itoa:  convert n to characters in s */
-extern void itoa( int n, char s[] )
-{
-  int i, sign ;
-
-  if ( (sign = n) < 0 )  /* record sign */
-  {
-    n = -n;          /* make n positive */
-  }
-
-  i = 0;
-  do
-  {       /* generate digits in reverse order */
-    s[i++] = n % 10 + '0';   /* get next digit */
-  } while ((n /= 10) > 0) ;     /* delete it */
-
-  if (sign < 0 )
-  {
-    s[i++] = '-';
-  }
-
-  s[i] = '\0';
-
-  reverse( s ) ;
-}
-
-#else
-
-extern char* itoa( int value, char *string, int radix )
-{
-  return ltoa( value, string, radix ) ;
-}
-
-extern char* ltoa( long value, char *string, int radix )
-{
-  char tmp[33];
-  char *tp = tmp;
-  long i;
-  unsigned long v;
-  int sign;
-  char *sp;
-
-  if ( string == NULL )
-  {
-    return 0 ;
-  }
-
-  if (radix > 36 || radix <= 1)
-  {
-    return 0 ;
-  }
-
-  sign = (radix == 10 && value < 0);
-  if (sign)
-  {
-    v = -value;
-  }
-  else
-  {
-    v = (unsigned long)value;
-  }
-
-  while (v || tp == tmp)
-  {
-    i = v % radix;
-    v = v / radix;
-    if (i < 10)
-      *tp++ = i+'0';
-    else
-      *tp++ = i + 'a' - 10;
-  }
-
-  sp = string;
-
-  if (sign)
-    *sp++ = '-';
-  while (tp > tmp)
-    *sp++ = *--tp;
-  *sp = 0;
-
-  return string;
-}
-
-extern char* utoa( unsigned long value, char *string, int radix )
-{
-  return ultoa( value, string, radix ) ;
-}
-
-extern char* ultoa( unsigned long value, char *string, int radix )
-{
-  char tmp[33];
-  char *tp = tmp;
-  long i;
-  unsigned long v = value;
-  char *sp;
-
-  if ( string == NULL )
-  {
-    return 0;
-  }
-
-  if (radix > 36 || radix <= 1)
-  {
-    return 0;
-  }
- 
-  while (v || tp == tmp)
-  {
-    i = v % radix;
-    v = v / radix;
-    if (i < 10)
-      *tp++ = i+'0';
-    else
-      *tp++ = i + 'a' - 10;
-  }
-
-  sp = string;
-
- 
-  while (tp > tmp)
-    *sp++ = *--tp;
-  *sp = 0;
-
-  return string;
-}
-#endif /* 0 */
-
-#ifdef __cplusplus
-} // extern "C"
-#endif // __cplusplus
--- a/hardware/arduino/sam/cores/arduino/itoa.h	2015-03-10 14:19:57.000000000 +0100
+++ b/hardware/arduino/sam/cores/arduino/itoa.h	2015-03-15 16:31:37.195659691 +0100
@@ -29,10 +29,15 @@
 
 #else
 
-extern char* itoa( int value, char *string, int radix ) ;
-extern char* ltoa( long value, char *string, int radix ) ;
-extern char* utoa( unsigned long value, char *string, int radix ) ;
-extern char* ultoa( unsigned long value, char *string, int radix ) ;
+static inline char* ltoa( long value, char *string, int radix )
+{
+  return itoa(value, string, radix);
+}
+
+static inline char* ultoa( unsigned long value, char *string, int radix )
+{
+  return utoa(value, string, radix);
+}
 #endif /* 0 */
 
 #ifdef __cplusplus
--- a/hardware/teensy/avr/cores/teensy3/avr_functions.h	2015-03-15 16:28:28.930694490 +0100
+++ b/hardware/teensy/avr/cores/teensy3/avr_functions.h	2015-03-15 16:30:39.605160501 +0100
@@ -31,6 +31,7 @@
 #ifndef _avr_functions_h_
 #define _avr_functions_h_
 
+#include <stdlib.h>
 #include <inttypes.h>
 
 #ifdef __cplusplus
@@ -92,12 +93,10 @@
 }
 
 
-char * ultoa(unsigned long val, char *buf, int radix);
-char * ltoa(long val, char *buf, int radix);
-static inline char * utoa(unsigned int val, char *buf, int radix) __attribute__((always_inline, unused));
-static inline char * utoa(unsigned int val, char *buf, int radix) { return ultoa(val, buf, radix); }
-static inline char * itoa(int val, char *buf, int radix) __attribute__((always_inline, unused));
-static inline char * itoa(int val, char *buf, int radix) { return ltoa(val, buf, radix); }
+static inline char * ultoa(unsigned long val, char *buf, int radix) __attribute__((always_inline, unused));
+static inline char * ultoa(unsigned long val, char *buf, int radix) { return utoa(val, buf, radix); }
+static inline char * ltoa(long val, char *buf, int radix) __attribute__((always_inline, unused));
+static inline char * ltoa(long val, char *buf, int radix) { return itoa(val, buf, radix); }
 char * dtostrf(float val, int width, unsigned int precision, char *buf);
 
 
--- a/hardware/teensy/avr/cores/teensy3/nonstd.c	2015-03-15 16:28:28.934027852 +0100
+++ b/hardware/teensy/avr/cores/teensy3/nonstd.c	2015-03-15 16:30:04.438189009 +0100
@@ -40,40 +40,6 @@
 	return n;
 }
 
-
-char * ultoa(unsigned long val, char *buf, int radix) 	
-{
-	unsigned digit;
-	int i=0, j;
-	char t;
-
-	while (1) {
-		digit = val % radix;
-		buf[i] = ((digit < 10) ? '0' + digit : 'A' + digit - 10);
-		val /= radix;
-		if (val == 0) break;
-		i++;
-	}
-	buf[i + 1] = 0;
-	for (j=0; j < i; j++, i--) {
-		t = buf[j];
-		buf[j] = buf[i];
-		buf[i] = t;
-	}
-	return buf;
-}
-
-char * ltoa(long val, char *buf, int radix)
-{
-	if (val >= 0) {
-		return ultoa(val, buf, radix);
-	} else {
-		buf[0] = '-';
-		ultoa(-val, buf + 1, radix);
-		return buf;
-	}
-}
-
 char * dtostrf(float val, int width, unsigned int precision, char *buf)
 {
 	int decpt, sign, reqd, pad;
